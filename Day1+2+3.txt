1. source code vs object code
      -> source code is basically the collection of programming statements created by programmer. This source code is compiled further to create object code.
      
2. Keywords variables
      -> keywords are basically predefined words in the programming language, whereas variables are those which we manually define.
      
3. Declare Array
      -> Array is collection of data. Declaring String array in java where we intialize the array as String[] s = new String();
      
4. Store data in array and process elements
      -> We created employee datan where we accepted data from user in array format stored it and then performed CRUDE operations on it. 
      
5. Pointers 
      -> pointers are bascally variables whose value is address of another variables. Pointers do not support java because they point to memory location which indirectly 
         loses the security. 
         
6. Calling function by passing values and refrences.
      -> calling by value means actual value of parameter is passed into the function. All the parameters has their independent location, so there is no significant change  
         while calling parameters.
         calling by refrence means passing address of the variable to that location. The address of the variables is copied when the function is called. So, we cannot make 
         significant changes while calling the function.
         
7. Dynamic memory allocation.
      -> Dynamic memory allocation is basically changing the size of the array as per the requirement. Dynamic memory allocation in java is controlled by the program during the
         execution. Dynamic memory allocation in java uses heaps space. New objects are created into heap space and their refrence is stored into stack memory.
         
8. Memory Leakage.
      -> Memory leakage is particularly a memory created by us but it is not in use. It is just a wastage of memory as garbage collector in java is unable to remove.
      
9. Access data members.
      -> Access data members in java are getters and setters. Getters and setters are useful while updating and retrieving value of variable. 
      
10. Implement Data structures.
      -> Data structures are basically storage and management of data which are easily accessible. Data structures we learnt during the session are linked list, binary tree, 
         stack,Queue etc. 
         Linked List: Linked list has sequential access, it has dynamic mempry allocation and also in linked list there is a node created with its address which points to the 
         next node and all operations are performed with the help of address of the node. 
         Stacks: Stack contains LIFO structure. The data members included during the implementation of the stack are top, and array. Methods included during implementation of 
         stack are push, pop, peek, isEmpty. Stack has dynamic memory allocation. 
         Queue: Queue contains FIFO structure. The datamembers included during the implementation of queue are front, rear, array. Methods included are isFull, Enqueue, dequeue
         etc. Queue also has dynamic memory allocation and elements in queue are accessed in sequential manner. 
         Binary Tree: Binary has root node and child are inherited from root node. As it is binary tree there are two child nodes. Left_child, Right_child. In binary tree there 
         is dynamic memory allocation. Tree structure are usually used to represent heirarchy of the data. For instance file structure in system. 
